  pipeline
{
    agent any
    stages
    {
        stage('ContinuousDownload')
        {
            steps
            {
                script
                {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/maven.git'
                    }
                    catch(Exception e1)
                    {
                        mail bcc: '', body: 'Jenkins failed to download the code from the Git Repository.', cc: '', from: '', replyTo: '', subject: 'Download Failed', to: 'Git.team@gmail.com'
                        exit(1)
                    }
                }
                
            }
        }
         stage('ContinuousBuild')
        {
            steps
            {
                script
                {
                    try
                    {
                        sh 'mvn package'
                    }
                    catch(Exception e2)
                    {
                        mail bcc: '', body: 'Jenkins failed to create an artifact', cc: '', from: '', replyTo: '', subject: 'Build Failed', to: 'development.team@gmail.com'
                        exit(1)
                    }
                }
                
            }
        }
         stage('ContinuousDeployment')
        {
            steps
            {
                script
                {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '13dd28b3-ace8-4318-8030-af8e17edd9c1', path: '', url: 'http://172.31.88.135:8080')], contextPath: 'testapp', war: '**/*.war'
                    }
                    catch(Exception e2)
                    {
                        mail bcc: '', body: 'Jenkins failed to Deploy the artifact into tomcat in the QAServer', cc: '', from: '', replyTo: '', subject: 'Deployment Failed', to: 'tomcat.team@gmail.com'
                        exit(1)
                    }
                }
                
            }
        }
         stage('ContinuousTesting')
        {
            steps
            {
                script
                {
                    try
                    {
                        git 'https://github.com/intelliqittrainings/FunctionalTesting.git'
                        sh 'java -jar /home/ubuntu/.jenkins/workspace/DeclarativePipeline1/testing.jar'
                    }
                    catch(Exception e4)
                    {
                        mail bcc: '', body: 'Jenkins failed to test the artifact ', cc: '', from: '', replyTo: '', subject: 'Testing Failed', to: 'Testing.team@gmail.com'
                        exit(1)
                    }
                }
                
            }
        }
          stage('ContinuousDelivery')
        {
            steps
            {
                script
                {
                    try
                    {
                        deploy adapters: [tomcat9(credentialsId: '13dd28b3-ace8-4318-8030-af8e17edd9c1', path: '', url: 'http://172.31.88.162:8080')], contextPath: 'prodapp', war: '**/*.war'
                    }
                    catch(Exception e5)
                    {
                        mail bcc: '', body: 'Jenkins failed to deploy the artifact into the ProdServer', cc: '', from: '', replyTo: '', subject: 'Delivery Failed', to: 'delivery.team@gmail.com'
                        
                    }
                }
                 
                 
            }
        }
          
    }
}
